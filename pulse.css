body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-size: 18px;
  overflow-x: hidden;
  --accent: var(--blue);
  --trans: var(--bluex);
  --color: var(--dark);
  --color-hard: var(--darker);
  --color-strong: var(--darkest);
  --bg-color: var(--lightest);
  --bg-color-soft: var(--lighter);
  --bg-color-weak: var(--light);
  --nav-color: var(--lightest);
  --nav-bg-color: var(--darkest);
}

.dark {
  --color: var(--light);
  --color-hard: var(--lighter);
  --color-strong: var(--lightest);
  --bg-color: var(--darkest);
  --bg-color-soft: var(--darker);
  --bg-color-weak: var(--dark);
   --nav-color: var(--darkest);
  --nav-bg-color: var(--lightest);
}

.blue {
  color: var(--blue);
}

.red {
  color: var(--red);
}

:root {
  --lightest: #fff;
  --lighter: #f2f2f2;
  --light: #eee;
  --tint: #f2f2f220;
  --dark: #36393f;
  --darker: #2f3136;
  --darkest: #202225;
  --shade: #2f313620;
  --bluex: #2c6fef20;
  --blue: #2c6fef;
  --red: #e1503c;
  --redx: #e1503c20;
  --yellow: #eea71f;
  --yellowx: #eea71f20;
}

nav {
  z-index: 1;
}

h1, h2, h3 {
  margin: 0;
}

h1 {
  font-size: 48px;
  font-weight: 600;
  color: var(--color-strong);
}

h2 {
  font-size: 36px;
  font-weight: 600;
  color: var(--color-hard);
}

h3 {
  font-size: 24px;
  font-weight: 600;
  color: var(--color);
}

p {
  font-size: inherit;
  color: var(--color);
}

strong {
  color: var(--color-strong);
}

a {
  outline: none;
  position: relative;
  color: var(--accent);
  text-decoration: none;
}

p a {
  display: inline;
  position: relative;
  overflow: hidden;
}

a, button, input {
  outline: none;
  border: 0;
  font-family: inherit;
}

.btn:disabled {
  color: var(--color);
  background-color: var(--bg-color-weak);
}

.btn {
  position: relative;
  display: flex;
  justify-content: start;
  align-items: center;
  padding: 10px 20px;
  color: var(--light);
  background-color: var(--accent);
  font-size: inherit;
  border-radius: 4px;
  overflow: hidden;
  cursor: pointer;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  vertical-align: middle;
  z-index: 1;
  transition: 0.2s ease-out;
}

.btn:not(.btn:disabled):hover, .btn:not(.btn:disabled):focus {
  filter: brightness(110%);
}

.btn:active {
  filter: brightness(100%);
}

.btn.subtle {
  color: var(--accent);
  background-color: transparent;
}

.btn.subtle:hover, .btn.subtle:focus {
  background-color: var(--trans);
  filter: none;
}

.btn span:first-child {
  margin: 0;
}

.btn span {
  margin: 0 0 0 5px;
}

.btn .waves-ripple {
  position: absolute;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  opacity: 0;
  background-color: rgba(0,0,0,0.2);
  -webkit-transition: all 0.7s ease-out;
  transition: all 0.7s ease-out;
  transition-property: transform, opacity, -webkit-transform;
  transform: scale(0);
  pointer-events: none;
}

input[type=submit] {
  display: flex;
  justify-content: center;
  margin: 20px 0 0 0;
  width: 100%;
}

input[type=text], input[type=password] {
  position: relative;
  padding: 20px 16px 8px;
  width: 100%;
  height: 48px;
  box-sizing: border-box;
  color: var(--color-strong);
  background-color: var(--bg-color-soft);
  border-radius: 4px;
  transition: background-color 0.2s linear;
}

input[type=text]:focus, input[type=password]:focus {
  background-color: var(--bg-color-weak);
}

.material-symbols-rounded + input {
  padding: 20px 48px 8px 16px;
}

.wrapper {
  overflow: hidden;
}

/* configure later */ 

.text {
  position: relative;
  display: inline-block;
  width: 100%;
  height: 48px; 
  border-radius: 4px;
  overflow: hidden;
}

.text:after {
  content: "";
  position: absolute;
  z-index: 1;
  right: 0;
  width: 0;
  top: 46px;
  background-color: var(--accent);
  height: 2px;
  border-radius: 0;
  transition-property: width;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

.text:hover:after {
  left: 0;
  right: auto;
  width: 100%;
}

.text:focus-within:after {
  width: 100%;
}

.text:focus-within input[type=text] + label, input[type=text]:valid + label, .text:focus-within input[type=password] + label, input[type=password]:valid + label {
  top: 4px;
  font-size: 12px;
  color: var(--accent) !important;
}

.text .material-symbols-rounded {
  position: absolute;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  top: 14px;
  right: 16px;
  color: var(--color);
  background-color: transparent;
  border-radius: 0;
  z-index: 1;
  cursor: pointer;
}

.text-wrapper {
  position: relative;
  width: 100%;
  height: auto;
}

.text-wrapper .error {
  position: relative;
  margin: 0 0 0 16px;
  font-size: 14px;
}

.text-wrapper .info {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.text-wrapper .counter {
  position: relative;
  margin: 0 16px 0 0;
  color: var(--color);
  font-size: 14px;
}

input[type=text] + label, input[type=password] + label {
  position: absolute;
  top: 14px;
  left: 16px;
  font-size: inherit;
  color: var(--color);
  opacity: 1;
  user-select: none;
  pointer-events: none;
  z-index: 1;
  transition-property: top, color, font-size;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}

.radios {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.radios .radio {
  margin: 8px 0 0 0;
}

.radios .radio:first-child {
  margin: 0;
}

.radio {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.radio label {
  margin: 0 0 0 8px;
}

input[type=radio] {
  position: relative;
  display: flex;
  margin: 0;
  width: 48px;
  height: 48px;
  opacity: 0;
  cursor: pointer;
}

input[type=radio] + .radio-circles {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0;
  left: 0;
  width: 48px;
  height: 48px;
  pointer-events: none;
}

input[type=radio] + .radio-circles .radio-outer {
  position: relative;
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  border-width: 2px;
  border-color: var(--color);
  border-style: solid;
  border-radius: 50%;
  transition: 0.2s linear;
}

input[type=radio] + .radio-circles .radio-inner {
  position: absolute;
  background-color: var(--accent);
  width: 0;
  height: 0;
  border-radius: 50%;
  transition: 0.1s linear;
}

input[type=radio]:checked + .radio-circles .radio-outer {
  position: relative;
  border-color: var(--accent);
}

input[type=radio]:checked + .radio-circles .radio-inner {
  position: absolute;
  margin: auto;
  width: 12px;
  height: 12px;
}

input[type=radio] + .radio-circles .touch {
  position: absolute;
  background-color: var(--shade);
  width: 0;
  height: 0;
  border-radius: 50%;
  transition: 0.1s linear;
}

input[type=radio]:checked + .radio-circles .touch {
  background-color: var(--trans);
}

input[type=radio]:hover + .radio-circles .touch, input[type=radio]:focus + .radio-circles .touch {
  width: 48px;
  height: 48px;
}

.checkboxes {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.checkboxes .checkbox {
  margin: 8px 0 0 0;
}

.checkboxes .checkbox:first-child {
  margin: 0;
}

.checkbox {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.checkbox label {
  margin: 0 0 0 8px;
}

input[type=checkbox] {
  position: relative;
  display: flex;
  margin: 0;
  width: 48px;
  height: 48px;
  opacity: 0;
  cursor: pointer;
}

.check {
  position: absolute;
  top: 12px;
  left: 12px;
  background-color: var(--accent);
  width: 24px;
  height: 24px;
  border-width: 2px;
  border-color: var(--color);
  border-style: solid;
  border-radius: 2px;
  box-sizing: border-box;
  pointer-events: none;
  transition: all 0.1s linear;
}

input[type=checkbox]:checked + .check {
  border-color: var(--accent);
}

.check:after {
  content: "";
  position: absolute;
  top: 0px;
  left: 0px;
  background-color: var(--bg-color);
  width: 20px;
  height: 20px;
  transition: all 0.1s ease-out;
}

input[type=checkbox]:checked + .check:after {
  transform: scale(0);
}

.checkmark {
  position: relative;
  width: 20px;
  height: 20px;
}

input[type=checkbox]:checked + .check .checkmark {
  position: absolute;
  width: 20px;
  height: 20px;
}

.checkmark .tick {
  position: absolute;
  stroke: var(--lightest);
  stroke-width: 3px;
  stroke-dashoffset: 30;
  stroke-dasharray: 30;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: all 0.1s linear;
}

input[type=checkbox]:checked + .check .checkmark .tick {
  stroke-dashoffset: 0;
}

input[type=checkbox] + .check .touch {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--shade);
  width: 0;
  height: 0;
  border-radius: 50%;
  transition: 0.1s linear;
}

input[type=checkbox]:checked + .check .touch {
  background-color: var(--trans);
}

input[type=checkbox]:hover + .check .touch, input[type=checkbox]:focus + .check .touch {
  width: 48px;
  height: 48px;
}

form {
  position: relative;
  display: block;
  box-sizing: border-box;
  padding: 20px;
  width: 100%;
  border-radius: 4px;
  box-shadow: 0 0 64px 0px var(--bluex);
}

form .form-group {
  margin: 20px 0 0 0;
}

form .form-group:first-child {
  margin: 0;
}

.form-title {
  font-size: 24px;
}

/* Smart Classes */

.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.row {
  display: flex;
  flex-direction: row;
}

.column {
  display: flex;
  flex-direction: column;
}

.evenly {
  display: flex;
  justify-content: space-evenly;
}

.between {
  display: flex;
  justify-content: space-between;
}

.align-center {
  display: flex;
  align-items: center;
}

.align-start {
  display: flex;
  align-items: center;
}

.align-end {
  display: flex;
  align-items: end;
}

.box {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

.box-alt {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

/* Media */

@media only screen and (max-width: 800px) {
  .box {
    flex-direction: column !important;
  }

  .box-alt {
    flex-direction: column-reverse !important;
  }
}